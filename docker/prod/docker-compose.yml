services:
  app:
    build:
      context: ../..
      dockerfile: docker/prod/Dockerfile
      target: runner
    container_name: wheel-app-prod
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - wheel-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: wheel-redis-prod
    command: redis-server --appendonly yes
    volumes:
      - redis_data_prod:/data
    networks:
      - wheel-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  nginx:
    image: nginx:alpine
    container_name: wheel-nginx-prod
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ../ssl/localhost.crt:/etc/ssl/certs/localhost.crt:ro
      - ../ssl/localhost.key:/etc/ssl/private/localhost.key:ro
    depends_on:
      - app
    networks:
      - wheel-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          '--no-check-certificate',
          'https://localhost/health || exit 1',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  redis_data_prod:
    driver: local

networks:
  wheel-network:
    driver: bridge
