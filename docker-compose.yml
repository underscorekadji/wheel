services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wheel-app
    expose:
      - "3000"
    env_file:
      - .env.docker
    volumes:
      - ./src:/app/src:ro
      - ./public:/app/public:ro
      - ./next.config.mjs:/app/next.config.mjs:ro
      - ./tailwind.config.ts:/app/tailwind.config.ts:ro
      - ./postcss.config.js:/app/postcss.config.js:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - wheel-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: wheel-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - wheel-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  nginx:
    image: nginx:alpine
    container_name: wheel-nginx
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - wheel-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost/health || exit 1',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  redis_data:
    driver: local

networks:
  wheel-network:
    driver: bridge
